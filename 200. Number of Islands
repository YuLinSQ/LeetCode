# referenced neetcode 150
class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        d = [[1,0], [0,1], [-1,0], [0,-1]]
        R, C = len(grid), len(grid[0])
        ans = 0

        def dfs(r, c):
            if r < 0 or c < 0 or r >= R or c >= C or grid[r][c] == "0":
                return
            grid[r][c] = "0"
            for dr,dc in d:
                dfs(r+dr, c+dc)
        
        for r in range(R):
            for c in range(C):
                if grid[r][c] == "1":
                    dfs(r,c)
                    ans+=1
        return ans
