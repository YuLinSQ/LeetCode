class Solution:
    def islandsAndTreasure(self, grid: List[List[int]]) -> None:
        R,C = len(grid),len(grid[0])
        visit = {}
        q = deque()

        def check(r, c):
            if r<0 or c<0 or r==R or c==C or (r, c) in visit or grid[r][c] == -1:
                return
            visit[(r, c)] = 1
            q.append([r, c])

        for r in range(R):
            for c in range(C):
                if grid[r][c] == 0:
                    q.append([r, c])
                    visit[(r, c)] = 1

        count = 0
        while q:
            for i in range(len(q)):
                r, c = q.popleft()
                grid[r][c] = count
                check(r+1,c)
                check(r-1,c)
                check(r,c+1)
                check(r,c-1)
            count+=1
        return
