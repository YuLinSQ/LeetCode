class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        ans = []
        n = len(matrix)-1
        m = len(matrix[0])-1
        if n == 0:
            return matrix[0]
        if m == 0:
            for i in range (n+1):
                ans.append(matrix[i][0])
            return ans
        a = [0, 0]
        b = [m, 0]
        c = [m, n]
        d = [0, n]
        while len(ans)<((m+1)*(n+1)) and a[0]<c[0] and a[1]<c[1]:
            for i in range (a[0], b[0]+1):
                ans.append(matrix[a[1]][i])
            for i in range (b[1]+1, c[1]+1):
                ans.append(matrix[i][b[0]])
            for i in range (c[0]-1, d[0]-1, -1):
                ans.append(matrix[c[1]][i])
            for i in range (d[1]-1, a[1], -1):
                ans.append(matrix[i][d[0]])
            a[0]+=1
            a[1]+=1
            b[0]-=1
            b[1]+=1
            c[0]-=1
            c[1]-=1
            d[0]+=1
            d[1]-=1
        if len(ans)<((m+1)*(n+1)) and a[1] == c[1]:
            for i in range (a[0], b[0]+1):
                ans.append(matrix[a[1]][i])
        if len(ans)<((m+1)*(n+1)) and a[0] == b[0]:
            for i in range (a[1], c[1]+1):
                ans.append(matrix[i][a[0]])
        return ans
