# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: Optional[ListNode]
        :type k: int
        :rtype: Optional[ListNode]
        """
        if head == None:
            return None
        temp = head
        i = 0
        while temp.next != None:
            i+=1
            temp = temp.next
        i+=1
        end = temp
        k = k % i
        if k == 0:
            return head
        temp = head
        for i in range(i-k-1):
            temp = temp.next
        r = temp.next
        temp.next = None
        end.next = head
        head = r
        return head
